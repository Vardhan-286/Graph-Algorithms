#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int distance(vector<vector<int> > &adj, int s, int t,int prev[],int dist[]) {
	queue<int> q;
    q.push(s);
	dist[s]=0;
	int u;
	while(!q.empty()){
		u=q.front();
		q.pop();
		for(int i:adj[u]){
			if(dist[i]==-1){
				q.push(i);
				dist[i]=dist[u]+1;
				prev[i] = u;
			}
		}
	}
    
    int length=0;
    while(t!=s){
  	    if(prev[t]==-1){
  		    return -1;
  	    }
  	    else{
  		    length++;
  	        t=prev[t];
  	    }
    }
    return length;
}

int main() {
  int n, m;
  cin >> n >> m;
  vector<vector<int> > adj(n, vector<int>());
  for (int i = 0; i < m; i++) {
    int x, y;
    cin >> x >> y;
    adj[x - 1].push_back(y - 1);
    adj[y - 1].push_back(x - 1);
  }
  int s, t;
  cin >> s >> t;
  s--, t--;
  int dist[n];
  for(int i=0;i<n;i++)
  	dist[i]=-1;
  int prev[n];
  for(int i=0;i<n;i++)
  	prev[i]=-1;
  cout << distance(adj, s, t, prev, dist);
}
